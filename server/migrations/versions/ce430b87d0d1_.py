"""empty message

Revision ID: ce430b87d0d1
Revises: 
Create Date: 2024-05-16 10:21:50.688727

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ce430b87d0d1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('address_line_1', sa.String(), nullable=False),
    sa.Column('address_line_2', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('zip', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('geolocation', sa.String(), nullable=True),
    sa.Column('geolocation_distance', sa.Integer(), nullable=True),
    sa.Column('address_notes', sa.String(), nullable=True),
    sa.Column('is_notified', sa.Boolean(), nullable=False),
    sa.Column('notify_contact', sa.Boolean(), nullable=False),
    sa.Column('notification_period', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('zip', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('push_notifications', sa.Boolean(), nullable=False),
    sa.Column('geolocation_on', sa.Boolean(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('is_fixed', sa.Boolean(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=False),
    sa.Column('recurrence_rule', sa.Text(), nullable=True),
    sa.Column('notify_client', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('is_endpoint', sa.Boolean(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('zip', sa.String(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('user_client_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_client_id'], ['user_clients.id'], name=op.f('fk_events_user_client_id_user_clients')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_events_user_id_users')),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('user_client_contacts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=False),
    sa.Column('is_notified', sa.Boolean(), nullable=False),
    sa.Column('user_client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_client_id'], ['user_clients.id'], name=op.f('fk_user_client_contacts_user_client_id_user_clients')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_client_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('user_client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_client_id'], ['user_clients.id'], name=op.f('fk_user_client_notes_user_client_id_user_clients')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_notes_user_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_parameters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('day_of_week', sa.String(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('is_start_mandatory', sa.Boolean(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('is_end_mandatory', sa.Boolean(), nullable=False),
    sa.Column('is_endpoint', sa.Boolean(), nullable=False),
    sa.Column('endpoint_address', sa.String(), nullable=True),
    sa.Column('endpoint_city', sa.String(), nullable=True),
    sa.Column('endpoint_state', sa.String(), nullable=True),
    sa.Column('endpoint_zip', sa.String(), nullable=True),
    sa.Column('is_shortest', sa.Boolean(), nullable=False),
    sa.Column('is_quickest', sa.Boolean(), nullable=False),
    sa.Column('is_highways', sa.Boolean(), nullable=False),
    sa.Column('is_tolls', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_parameters_user_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Integer(), nullable=False),
    sa.Column('report_content', sa.Text(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_reports_user_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_temp_params',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('is_start_mandatory', sa.Boolean(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('is_end_mandatory', sa.Boolean(), nullable=False),
    sa.Column('is_endpoint', sa.Boolean(), nullable=False),
    sa.Column('endpoint_address', sa.String(), nullable=True),
    sa.Column('endpoint_city', sa.String(), nullable=True),
    sa.Column('endpoint_state', sa.String(), nullable=True),
    sa.Column('endpoint_zip', sa.String(), nullable=True),
    sa.Column('is_shortest', sa.Boolean(), nullable=False),
    sa.Column('is_quickest', sa.Boolean(), nullable=False),
    sa.Column('is_highways', sa.Boolean(), nullable=False),
    sa.Column('is_tolls', sa.Boolean(), nullable=False),
    sa.Column('nullify_fixed', sa.Boolean(), nullable=False),
    sa.Column('nullify_priority', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_temp_params_user_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_instances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('instance_date', sa.DateTime(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('modified', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name=op.f('fk_event_instances_event_id_events')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('reason', sa.Integer(), nullable=False),
    sa.Column('notification_period', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name=op.f('fk_user_notifications_event_id_events')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_notifications_user_id_users')),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('event_exceptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_instance_id', sa.Integer(), nullable=False),
    sa.Column('exception_date', sa.DateTime(), nullable=True),
    sa.Column('new_start_time', sa.DateTime(), nullable=True),
    sa.Column('new_duration', sa.Integer(), nullable=True),
    sa.Column('cancelled', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['event_instance_id'], ['event_instances.id'], name=op.f('fk_event_exceptions_event_instance_id_event_instances')),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('event_exceptions')
    op.drop_table('user_notifications')
    op.drop_table('event_instances')
    op.drop_table('user_temp_params')
    op.drop_table('user_reports')
    op.drop_table('user_parameters')
    op.drop_table('user_notes')
    op.drop_table('user_client_notes')
    op.drop_table('user_client_contacts')
    op.drop_table('events')
    op.drop_table('users')
    op.drop_table('user_clients')
    # ### end Alembic commands ###
